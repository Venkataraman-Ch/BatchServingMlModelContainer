on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Log in to amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin 939794682570.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
        env:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws_session_token: ${{secrets.AWS_SESSION_TOKEN}}          
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Verify AWS CLI access
        run: aws sts get-caller-identity

      - name: Build Docker image
        run: docker build -t venkat_eeg_model_container.
        
      - name: Tag Docker image
        run: docker tag venkat_eeg_model_container:latest 939794682570.dkr.ecr.us-east-1.amazonaws.com/venkat_eeg_model_container:latest

      - name: Push Docker image to ECR
        run: docker push 939794682570.dkr.ecr.us-east-1.amazonaws.com/venkat_eeg_model_container:latest

  #deploy:
  #  needs: build
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Deploy to ECS
  #      run: |
  #        aws ecs update-service --cluster <cluster-name> --service <service-name> --force-new-deployment
  #      env:
  #        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
